buildscript {

    ext {
        kotlin_version = '1.3.20'
        kotlin_coroutine_version = '1.1.0'
        serialization_version = '0.9.0'
        spring_boot_version = "2.1.2.RELEASE"
        jjwt_version = '0.9.0'
        junit = '5.2.0'
        junit_platform = '1.2.0'
    }

    repositories {
        maven { url 'https://maven.google.com' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.bmuschko:gradle-docker-plugin:4.3.0'
    }
}


allprojects {
    apply plugin: 'kotlinx-serialization'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: "jacoco"
    apply plugin: 'com.bmuschko.docker-remote-api'

    group = "com.infowings"
    version = "20.3"

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://maven.google.com' }
    }
    test {
        useJUnitPlatform()
    }
    docker {
        registryCredentials {
            username = project.properties['dockerUser'] ?: System.getenv('dockerUser') ?: ""
            password = project.properties['dockerPassword'] ?: System.getenv('dockerPassword') ?: ""
            email = project.properties['dockerEmail'] ?: System.getenv('dockerEmail') ?: ""
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}
codeCoverageReport.dependsOn {
    subprojects*.test
}
