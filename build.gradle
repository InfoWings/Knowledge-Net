group = 'cyber'
version = '12'

buildscript {

    ext {
        kotlin_coroutine_version = '0.24.0'
        kotlin_version = '1.2.60'
        serialization_version = '0.6.1'
        spring_boot_version = "2.0.0.RELEASE"
        postgresql_version = "9.1-901.jdbc4"
        jjwt_version = '0.9.0'
        junit = '5.2.0'
        junit_platform = '1.2.0'
    }

    repositories {
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://maven.google.com' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serialization_version"
    }
}


allprojects {
    apply plugin: 'kotlinx-serialization'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: "jacoco"

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://maven.google.com' }
    }
    test {
        useJUnitPlatform()
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}
codeCoverageReport.dependsOn {
    subprojects*.test
}